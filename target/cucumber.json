[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-12-20T10:18:54.881Z",
        "before": [
          {
            "result": {
              "duration": 187713000,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 4,
        "name": "Updating the card status to inactive",
        "description": "",
        "id": "updating-the-card-status-by-admin;updating-the-card-status-to-inactive",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3499026900,
              "status": "passed"
            },
            "line": 6,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.net.UnknownHostException: apitest.pineperks.innull\r\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)\r\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:929)\r\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1324)\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1277)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:262)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:161)\r\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:328)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2141)\r\n\tat io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)\r\n\tat io.restassured.internal.http.HTTPBuilder$post$3.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:116)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:136)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1274)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:152)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat com.qc.BaseAPI$logFilter.filter(BaseAPI.java:165)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1744)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1750)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:157)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:175)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat com.qc.BaseAPI.postAPI(BaseAPI.java:79)\r\n\tat pl.rest.service.CardUpdate.adminCardUpdate(CardUpdate.java:37)\r\n\tat pl.rest.stepDefs.CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(CardUpdateStepDefs.java:49)\r\n\tat âœ½.i am changing the status with the following details:(classpath:features/cardissue/AdminCardUpdate.feature:7)\r\n",
              "duration": 138202500,
              "status": "failed"
            },
            "line": 7,
            "name": "i am changing the status with the following details:",
            "match": {
              "location": "CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "cardStatus",
                  "2"
                ]
              },
              {
                "cells": [
                  "reason",
                  "1"
                ]
              },
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11400,
              "status": "skipped"
            },
            "line": 12,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3500,
              "status": "skipped"
            },
            "line": 13,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3100,
              "status": "skipped"
            },
            "line": 17,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:18:58.716Z",
        "before": [
          {
            "result": {
              "duration": 698300,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Updating the card status to blocked",
        "description": "",
        "id": "updating-the-card-status-by-admin;updating-the-card-status-to-blocked",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 583230300,
              "status": "passed"
            },
            "line": 23,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.net.UnknownHostException: apitest.pineperks.innull\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1281)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:262)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:161)\r\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:328)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2141)\r\n\tat io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)\r\n\tat io.restassured.internal.http.HTTPBuilder$post$3.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1274)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:152)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat com.qc.BaseAPI$logFilter.filter(BaseAPI.java:165)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1744)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1750)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:175)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat com.qc.BaseAPI.postAPI(BaseAPI.java:79)\r\n\tat pl.rest.service.CardUpdate.adminCardUpdate(CardUpdate.java:37)\r\n\tat pl.rest.stepDefs.CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(CardUpdateStepDefs.java:49)\r\n\tat âœ½.i am changing the status with the following details:(classpath:features/cardissue/AdminCardUpdate.feature:24)\r\n",
              "duration": 15335300,
              "status": "failed"
            },
            "line": 24,
            "name": "i am changing the status with the following details:",
            "match": {
              "location": "CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "cardStatus",
                  "3"
                ]
              },
              {
                "cells": [
                  "reason",
                  "1"
                ]
              },
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3100,
              "status": "skipped"
            },
            "line": 29,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3100,
              "status": "skipped"
            },
            "line": 30,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1700,
              "status": "skipped"
            },
            "line": 34,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "- cardStatus : Selected value Blocked is not allowed"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:18:59.319Z",
        "before": [
          {
            "result": {
              "duration": 528300,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 39,
        "name": "Updating the card status from active to active",
        "description": "",
        "id": "updating-the-card-status-by-admin;updating-the-card-status-from-active-to-active",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 755669000,
              "status": "passed"
            },
            "line": 40,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "java.net.UnknownHostException: apitest.pineperks.innull\r\n\tat java.net.InetAddress.getAllByName0(InetAddress.java:1281)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1193)\r\n\tat java.net.InetAddress.getAllByName(InetAddress.java:1127)\r\n\tat org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.resolveHostname(DefaultClientConnectionOperator.java:262)\r\n\tat org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:161)\r\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.open(ManagedClientConnectionImpl.java:328)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2141)\r\n\tat io.restassured.internal.http.HTTPBuilder.post(HTTPBuilder.java:349)\r\n\tat io.restassured.internal.http.HTTPBuilder$post$3.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1274)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:152)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat com.qc.BaseAPI$logFilter.filter(BaseAPI.java:165)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1744)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1750)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:98)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1225)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1034)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:822)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:47)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy:175)\r\n\tat io.restassured.internal.RequestSpecificationImpl.post(RequestSpecificationImpl.groovy)\r\n\tat com.qc.BaseAPI.postAPI(BaseAPI.java:79)\r\n\tat pl.rest.service.CardUpdate.adminCardUpdate(CardUpdate.java:37)\r\n\tat pl.rest.stepDefs.CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(CardUpdateStepDefs.java:49)\r\n\tat âœ½.i am changing the status with the following details:(classpath:features/cardissue/AdminCardUpdate.feature:41)\r\n",
              "duration": 14262200,
              "status": "failed"
            },
            "line": 41,
            "name": "i am changing the status with the following details:",
            "match": {
              "location": "CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "cardStatus",
                  "1"
                ]
              },
              {
                "cells": [
                  "reason",
                  "1"
                ]
              },
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10600,
              "status": "skipped"
            },
            "line": 46,
            "name": "i am again changing the status with the following details:",
            "match": {
              "location": "CardUpdateStepDefs.iAmChangingTheStatusWithTheFollowingDetails(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "cardStatus",
                  "1"
                ]
              },
              {
                "cells": [
                  "reason",
                  "1"
                ]
              },
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000,
              "status": "skipped"
            },
            "line": 51,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1800,
              "status": "skipped"
            },
            "line": 52,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "remarks",
                  "Test"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1700,
              "status": "skipped"
            },
            "line": 56,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "referenceNumber",
                  "6539518357"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Card is already in this state. Please choose different status to update"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      }
    ],
    "name": "Updating the Card status by admin",
    "description": "",
    "id": "updating-the-card-status-by-admin",
    "keyword": "Feature",
    "uri": "classpath:features/cardissue/AdminCardUpdate.feature",
    "tags": [
      {
        "name": "@Regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2021-12-20T10:19:00.092Z",
        "before": [
          {
            "result": {
              "duration": 732700,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 5,
        "name": "Issuing a instant non reloadable card",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;issuing-a-instant-non-reloadable-card",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 448552900,
              "status": "passed"
            },
            "line": 6,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 758756700,
              "status": "passed"
            },
            "line": 7,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_using_header(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 43526100,
              "status": "passed"
            },
            "line": 14,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 390101400,
              "status": "passed"
            },
            "line": 15,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "orderStatus",
                  "6"
                ]
              },
              {
                "cells": [
                  "successCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "orderAmount",
                  "1000"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9931900,
              "status": "passed"
            },
            "line": 22,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "customerName",
                  "mobileNumber",
                  "email",
                  "amount",
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "afzal",
                  "8284854535",
                  "afzal.ahmed@pinelabs.com",
                  "1000",
                  "0",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1282245300,
              "status": "passed"
            },
            "line": 25,
            "name": "i should see the following in the card list in the database",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheCardListInTheDatabase(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ActivationEmail",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "ActivationMobileNumber",
                  "8284854535"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:03.027Z",
        "before": [
          {
            "result": {
              "duration": 642800,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 30,
        "name": "Issuing a instant non reloadable card",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;issuing-a-instant-non-reloadable-card",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 421644200,
              "status": "passed"
            },
            "line": 31,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 427103000,
              "status": "passed"
            },
            "line": 32,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 241800,
              "status": "passed"
            },
            "line": 39,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 54418300,
              "status": "passed"
            },
            "line": 40,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "orderStatus",
                  "6"
                ]
              },
              {
                "cells": [
                  "successCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "orderAmount",
                  "1000"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6131900,
              "status": "passed"
            },
            "line": 47,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "customerName",
                  "mobileNumber",
                  "email",
                  "amount",
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "afzal",
                  "8284854535",
                  "afzal.ahmed@pinelabs.com",
                  "1000",
                  "0",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63874600,
              "status": "passed"
            },
            "line": 50,
            "name": "i should see the following in the card list in the database",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheCardListInTheDatabase(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ActivationEmail",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "ActivationMobileNumber",
                  "8284854535"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          },
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:04.004Z",
        "before": [
          {
            "result": {
              "duration": 817900,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 74,
        "name": "Validating the response code and messages.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-response-code-and-messages.;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 390630700,
              "status": "passed"
            },
            "line": 55,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 194138500,
              "status": "passed"
            },
            "line": 56,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_using_header(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "123Afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 188100,
              "status": "passed"
            },
            "line": 63,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29212700,
              "status": "passed"
            },
            "line": 64,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7856400,
              "status": "passed"
            },
            "line": 69,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- firstName : Customer Name is not valid. It should start with an alphabet and could contain maximum 50 characters in form of alphabets, numbers, white space, dot(.)"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:04.628Z",
        "before": [
          {
            "result": {
              "duration": 381400,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 75,
        "name": "Validating the response code and messages.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-response-code-and-messages.;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 352075900,
              "status": "passed"
            },
            "line": 55,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 260200600,
              "status": "passed"
            },
            "line": 56,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_using_header(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "1111111111"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 211300,
              "status": "passed"
            },
            "line": 63,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37194600,
              "status": "passed"
            },
            "line": 64,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6353300,
              "status": "passed"
            },
            "line": 69,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- mobileNumber : Mobile Number is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:05.286Z",
        "before": [
          {
            "result": {
              "duration": 312900,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 76,
        "name": "Validating the response code and messages.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-response-code-and-messages.;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 409324900,
              "status": "passed"
            },
            "line": 55,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1024702300,
              "status": "passed"
            },
            "line": 56,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_using_header(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 247400,
              "status": "passed"
            },
            "line": 63,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 28146000,
              "status": "passed"
            },
            "line": 64,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3586200,
              "status": "passed"
            },
            "line": 69,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- email : Email Format is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:06.753Z",
        "before": [
          {
            "result": {
              "duration": 288200,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 98,
        "name": "Validating the error response code and messages.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-error-response-code-and-messages.;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 339926400,
              "status": "passed"
            },
            "line": 79,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 993120700,
              "status": "passed"
            },
            "line": 80,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "123Afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 284900,
              "status": "passed"
            },
            "line": 87,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37100500,
              "status": "passed"
            },
            "line": 88,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8057600,
              "status": "passed"
            },
            "line": 93,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- firstName : Customer Name is not valid. It should start with an alphabet and could contain maximum 50 characters in form of alphabets, numbers, white space, dot(.)"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:08.133Z",
        "before": [
          {
            "result": {
              "duration": 309800,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 99,
        "name": "Validating the error response code and messages.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-error-response-code-and-messages.;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 367441800,
              "status": "passed"
            },
            "line": 79,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 173271400,
              "status": "passed"
            },
            "line": 80,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "1111111111"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 144100,
              "status": "passed"
            },
            "line": 87,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19562700,
              "status": "passed"
            },
            "line": 88,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3870900,
              "status": "passed"
            },
            "line": 93,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- mobileNumber : Mobile Number is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:08.698Z",
        "before": [
          {
            "result": {
              "duration": 235400,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 100,
        "name": "Validating the error response code and messages.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-error-response-code-and-messages.;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 325349400,
              "status": "passed"
            },
            "line": 79,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 207349700,
              "status": "passed"
            },
            "line": 80,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "7"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 203300,
              "status": "passed"
            },
            "line": 87,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 34787700,
              "status": "passed"
            },
            "line": 88,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "13"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5070800,
              "status": "passed"
            },
            "line": 93,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- email : Email Format is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:09.272Z",
        "before": [
          {
            "result": {
              "duration": 212300,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 102,
        "name": "Issuing a card with Invalid Scheme id",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;issuing-a-card-with-invalid-scheme-id",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 335579900,
              "status": "passed"
            },
            "line": 103,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 145408800,
              "status": "passed"
            },
            "line": 104,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_using_header(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "51"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 133400,
              "status": "passed"
            },
            "line": 111,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7835600,
              "status": "passed"
            },
            "line": 112,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "305"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card scheme Id"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:09.763Z",
        "before": [
          {
            "result": {
              "duration": 263800,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 116,
        "name": "Issuing a card with Invalid Scheme id",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;issuing-a-card-with-invalid-scheme-id",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 331068600,
              "status": "passed"
            },
            "line": 117,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 163195700,
              "status": "passed"
            },
            "line": 118,
            "name": "i am issuing an Instant Non Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 58
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Non_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "51"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "8284854535"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 317900,
              "status": "passed"
            },
            "line": 125,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15330500,
              "status": "passed"
            },
            "line": 126,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "305"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card scheme Id"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:10.274Z",
        "line": 130,
        "name": "Issuing card with amoount more that available account balance.",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;issuing-card-with-amoount-more-that-available-account-balance.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:10.275Z",
        "line": 133,
        "name": "Validating the net order amount after changing the issuance charges",
        "description": "",
        "id": "issuing-instant-non-reloadable-cards;validating-the-net-order-amount-after-changing-the-issuance-charges",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [],
        "tags": [
          {
            "name": "@Regression"
          }
        ]
      }
    ],
    "name": "Issuing instant Non Reloadable cards",
    "description": "",
    "id": "issuing-instant-non-reloadable-cards",
    "keyword": "Feature",
    "uri": "classpath:features/cardissue/InstantNonRelodableDigital.feature",
    "tags": [
      {
        "name": "@Regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 168900,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39336100,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:10.277Z",
        "before": [
          {
            "result": {
              "duration": 446200,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Issuing a Reloadable Digital Card with V1 API",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-a-reloadable-digital-card-with-v1-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 342010900,
              "status": "passed"
            },
            "line": 10,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1227969700,
              "status": "passed"
            },
            "line": 11,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 232700,
              "status": "passed"
            },
            "line": 18,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 47173000,
              "status": "passed"
            },
            "line": 19,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "orderStatus",
                  "6"
                ]
              },
              {
                "cells": [
                  "successCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "orderAmount",
                  "1000"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3893900,
              "status": "passed"
            },
            "line": 26,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "customerName",
                  "mobileNumber",
                  "email",
                  "amount",
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "afzal",
                  "8284854535",
                  "afzal.ahmed@pinelabs.com",
                  "1000",
                  "0",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50439900,
              "status": "passed"
            },
            "line": 29,
            "name": "i should see the following in the card list in the database",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheCardListInTheDatabase(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ActivationEmail",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "ActivationMobileNumber",
                  "context"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          },
          {
            "name": "@DB"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 349600,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36771800,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:11.990Z",
        "before": [
          {
            "result": {
              "duration": 159000,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "Issuing a Reloadable Digital Card with V2 API",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-a-reloadable-digital-card-with-v2-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 330115800,
              "status": "passed"
            },
            "line": 35,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1244236800,
              "status": "passed"
            },
            "line": 36,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 266100,
              "status": "passed"
            },
            "line": 43,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 48422100,
              "status": "passed"
            },
            "line": 44,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "orderStatus",
                  "6"
                ]
              },
              {
                "cells": [
                  "successCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "orderAmount",
                  "1000"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4179600,
              "status": "passed"
            },
            "line": 51,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "customerName",
                  "mobileNumber",
                  "email",
                  "amount",
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "afzal",
                  "8284854535",
                  "afzal.ahmed@pinelabs.com",
                  "1000",
                  "0",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42630900,
              "status": "passed"
            },
            "line": 54,
            "name": "i should see the following in the card list in the database",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheCardListInTheDatabase(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ActivationEmail",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "ActivationMobileNumber",
                  "context"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          },
          {
            "name": "@DB"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 74400,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35007500,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:13.698Z",
        "before": [
          {
            "result": {
              "duration": 567900,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 77,
        "name": "Validating the response code and messages for V1 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-response-code-and-messages-for-v1-api.;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 597393700,
              "status": "passed"
            },
            "line": 59,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 233691700,
              "status": "passed"
            },
            "line": 60,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "123Afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 233400,
              "status": "passed"
            },
            "line": 67,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 30207500,
              "status": "passed"
            },
            "line": 68,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6505400,
              "status": "passed"
            },
            "line": 72,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- firstName : Customer Name is not valid. It should start with an alphabet and could contain maximum 50 characters in form of alphabets, numbers, white space, dot(.)"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 135800,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29440300,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:14.604Z",
        "before": [
          {
            "result": {
              "duration": 371300,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 78,
        "name": "Validating the response code and messages for V1 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-response-code-and-messages-for-v1-api.;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 372402700,
              "status": "passed"
            },
            "line": 59,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213759200,
              "status": "passed"
            },
            "line": 60,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "1111111111"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 242600,
              "status": "passed"
            },
            "line": 67,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21306500,
              "status": "passed"
            },
            "line": 68,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5232400,
              "status": "passed"
            },
            "line": 72,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- mobileNumber : Mobile Number is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 110700,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34638600,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:15.248Z",
        "before": [
          {
            "result": {
              "duration": 319500,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 79,
        "name": "Validating the response code and messages for V1 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-response-code-and-messages-for-v1-api.;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 403826100,
              "status": "passed"
            },
            "line": 59,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 233401300,
              "status": "passed"
            },
            "line": 60,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 125300,
              "status": "passed"
            },
            "line": 67,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21769400,
              "status": "passed"
            },
            "line": 68,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8390200,
              "status": "passed"
            },
            "line": 72,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- email : Email Format is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 108500,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 45471400,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:15.952Z",
        "before": [
          {
            "result": {
              "duration": 312200,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 80,
        "name": "Validating the response code and messages for V1 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-response-code-and-messages-for-v1-api.;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 425313700,
              "status": "passed"
            },
            "line": 59,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1095660100,
              "status": "passed"
            },
            "line": 60,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "99999999"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 824800,
              "status": "passed"
            },
            "line": 67,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 24192400,
              "status": "passed"
            },
            "line": 68,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4833500,
              "status": "passed"
            },
            "line": 72,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "364",
                  "Invalid Maximum Load Amount"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 94700,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33891600,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:17.550Z",
        "before": [
          {
            "result": {
              "duration": 217400,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 101,
        "name": "Validating the error response code and messages for V2 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-error-response-code-and-messages-for-v2-api.;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 322615800,
              "status": "passed"
            },
            "line": 83,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 312026000,
              "status": "passed"
            },
            "line": 84,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "123Afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 272700,
              "status": "passed"
            },
            "line": 91,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18302100,
              "status": "passed"
            },
            "line": 92,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4163700,
              "status": "passed"
            },
            "line": 96,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- firstName : Customer Name is not valid. It should start with an alphabet and could contain maximum 50 characters in form of alphabets, numbers, white space, dot(.)"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 51900,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 33759900,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:18.242Z",
        "before": [
          {
            "result": {
              "duration": 147100,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 102,
        "name": "Validating the error response code and messages for V2 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-error-response-code-and-messages-for-v2-api.;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 311076100,
              "status": "passed"
            },
            "line": 83,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 187368700,
              "status": "passed"
            },
            "line": 84,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "1111111111"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 190300,
              "status": "passed"
            },
            "line": 91,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23333600,
              "status": "passed"
            },
            "line": 92,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6076900,
              "status": "passed"
            },
            "line": 96,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- mobileNumber : Mobile Number is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 90600,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34896600,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:18.805Z",
        "before": [
          {
            "result": {
              "duration": 239500,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 103,
        "name": "Validating the error response code and messages for V2 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-error-response-code-and-messages-for-v2-api.;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1392876300,
              "status": "passed"
            },
            "line": 83,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 223695700,
              "status": "passed"
            },
            "line": 84,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 192100,
              "status": "passed"
            },
            "line": 91,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14806200,
              "status": "passed"
            },
            "line": 92,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card data"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2882000,
              "status": "passed"
            },
            "line": 96,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "13",
                  "- email : Email Format is not valid"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 72500,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 34249600,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:20.476Z",
        "before": [
          {
            "result": {
              "duration": 168000,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 104,
        "name": "Validating the error response code and messages for V2 API.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-error-response-code-and-messages-for-v2-api.;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 294522500,
              "status": "passed"
            },
            "line": 83,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 366971500,
              "status": "passed"
            },
            "line": 84,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "99999999"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 184900,
              "status": "passed"
            },
            "line": 91,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25425700,
              "status": "passed"
            },
            "line": 92,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6066300,
              "status": "passed"
            },
            "line": 96,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "364",
                  "Invalid Maximum Load Amount"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 99200,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 48170300,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:21.205Z",
        "before": [
          {
            "result": {
              "duration": 210500,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 106,
        "name": "Issuing a card with Invalid Scheme id for V1 API",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-a-card-with-invalid-scheme-id-for-v1-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 338592500,
              "status": "passed"
            },
            "line": 107,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 163925800,
              "status": "passed"
            },
            "line": 108,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "51"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 92200,
              "status": "passed"
            },
            "line": 115,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6960400,
              "status": "passed"
            },
            "line": 116,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "305"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card scheme Id"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 44900,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49080300,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:21.764Z",
        "before": [
          {
            "result": {
              "duration": 157000,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 120,
        "name": "Issuing a card with Invalid Scheme id for V2 API",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-a-card-with-invalid-scheme-id-for-v2-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 329904700,
              "status": "passed"
            },
            "line": 121,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 179248700,
              "status": "passed"
            },
            "line": 122,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "51"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 94200,
              "status": "passed"
            },
            "line": 129,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7053600,
              "status": "passed"
            },
            "line": 130,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "responseCode",
                  "305"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Invalid card scheme Id"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 48000,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39043100,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:22.330Z",
        "before": [
          {
            "result": {
              "duration": 169000,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 134,
        "name": "Issuing a reloadable card on already linked mobile for V1 API",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-a-reloadable-card-on-already-linked-mobile-for-v1-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 423228300,
              "status": "passed"
            },
            "line": 135,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 421650000,
              "status": "passed"
            },
            "line": 136,
            "name": "i am issuing an Instant Reloadable Digital Card using \"old\" header with V1 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 459362100,
              "status": "passed"
            },
            "line": 143,
            "name": "i am again issuing the the card with the same details with \"old\" for V1 API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 59
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 226600,
              "status": "passed"
            },
            "line": 150,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27021400,
              "status": "passed"
            },
            "line": 151,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "orderStatus",
                  "6"
                ]
              },
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "orderAmount",
                  "1000"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3332100,
              "status": "passed"
            },
            "line": 158,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "customerName",
                  "mobileNumber",
                  "email",
                  "amount",
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "afzal",
                  "8284854535",
                  "afzal.ahmed@pinelabs.com",
                  "1000",
                  "269",
                  "Request declined. Only one such card can be linked to a mobile number"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 62600,
              "status": "passed"
            },
            "line": 5,
            "name": "i fetch the mobile number from properties",
            "match": {
              "location": "PreCondition.iFetchTheMobileNumberFromProperties()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 56738500,
              "status": "passed"
            },
            "line": 6,
            "name": "de link from all the previously issued card",
            "match": {
              "location": "PreCondition.deLinkFromAllThePreviouslyIssuedCard()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2021-12-20T10:19:23.705Z",
        "before": [
          {
            "result": {
              "duration": 178300,
              "status": "passed"
            },
            "match": {
              "location": "CustomHooks.getTagNamesForTestDataSet(Scenario)"
            }
          }
        ],
        "line": 162,
        "name": "Issuing a reloadable card on already linked mobile for V2 API",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-a-reloadable-card-on-already-linked-mobile-for-v2-api",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 352107800,
              "status": "passed"
            },
            "line": 163,
            "name": "i am an authorized corporate user",
            "match": {
              "location": "AuthorizeStepDefs.IamAnAuthorizedUser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 438241400,
              "status": "passed"
            },
            "line": 164,
            "name": "i am issuing an Instant Reloadable Digital Card using \"new\" header with V2 of API",
            "match": {
              "arguments": [
                {
                  "val": "\"new\"",
                  "offset": 54
                }
              ],
              "location": "CardIssueStepDefs.i_am_issuing_an_Instant_Reloadable_Digital_Card_with_V2_API(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 431833300,
              "status": "passed"
            },
            "line": 171,
            "name": "i am again issuing the the card with the same details with \"old\" for V1 API",
            "match": {
              "arguments": [
                {
                  "val": "\"old\"",
                  "offset": 59
                }
              ],
              "location": "CardIssueStepDefs.iAmIssuingAnInstantReloadableDigitalCardUsingHeaderWithVOfAPI(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cardSchemeId",
                  "12"
                ]
              },
              {
                "cells": [
                  "isLinkToBeSentOnMobile",
                  "true"
                ]
              },
              {
                "cells": [
                  "customerName",
                  "afzal"
                ]
              },
              {
                "cells": [
                  "mobileNumber",
                  "context"
                ]
              },
              {
                "cells": [
                  "email",
                  "afzal.ahmed@pinelabs.com"
                ]
              },
              {
                "cells": [
                  "amount",
                  "1000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 265500,
              "status": "passed"
            },
            "line": 178,
            "name": "the status code should be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "TransactionsStepDefs.theStatusCodeShouldBe(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 42680300,
              "status": "passed"
            },
            "line": 179,
            "name": "i should see the following in the header level",
            "match": {
              "location": "TransactionsStepDefs.iShouldSeeTheFollowingInTheHeaderLevel(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "orderStatus",
                  "6"
                ]
              },
              {
                "cells": [
                  "successCount",
                  "0"
                ]
              },
              {
                "cells": [
                  "failedCount",
                  "1"
                ]
              },
              {
                "cells": [
                  "orderAmount",
                  "1000"
                ]
              },
              {
                "cells": [
                  "responseCode",
                  "0"
                ]
              },
              {
                "cells": [
                  "responseMessage",
                  "Success"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4122200,
              "status": "passed"
            },
            "line": 186,
            "name": "i should see the following in the card list",
            "match": {
              "location": "TransactionsStepDefs.i_should_see_the_following_in_the_card_list(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "customerName",
                  "mobileNumber",
                  "email",
                  "amount",
                  "responseCode",
                  "responseMessage"
                ]
              },
              {
                "cells": [
                  "afzal",
                  "8284854535",
                  "afzal.ahmed@pinelabs.com",
                  "1000",
                  "269",
                  "Request declined. Only one such card can be linked to a mobile number"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "start_timestamp": "2021-12-20T10:19:25.032Z",
        "line": 190,
        "name": "Issuing card with amoount more that available account balance.",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;issuing-card-with-amoount-more-that-available-account-balance.",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "start_timestamp": "2021-12-20T10:19:25.032Z",
        "line": 193,
        "name": "Validating the net order amount after changing the issuance charges",
        "description": "",
        "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api;validating-the-net-order-amount-after-changing-the-issuance-charges",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [],
        "tags": [
          {
            "name": "@TestSet0"
          },
          {
            "name": "@Regression"
          }
        ]
      }
    ],
    "name": "Issuing Reloadable Digital cards with V1 and V2 API",
    "description": "",
    "id": "issuing-reloadable-digital-cards-with-v1-and-v2-api",
    "keyword": "Feature",
    "uri": "classpath:features/cardissue/InstantReloadableDigital.feature",
    "tags": [
      {
        "name": "@TestSet0",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@Regression",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 11
        }
      }
    ]
  }
]