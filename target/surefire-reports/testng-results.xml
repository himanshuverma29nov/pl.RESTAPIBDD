<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" ignored="0" total="19" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="25057" started-at="2021-12-24T06:33:05Z" finished-at="2021-12-24T06:33:30Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Surefire test" duration-ms="25057" started-at="2021-12-24T06:33:05Z" finished-at="2021-12-24T06:33:30Z">
      <class name="pl.rest.testRunners.NonDBTestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="setUpClass" is-config="true" duration-ms="175" started-at="2021-12-24T06:33:05Z" finished-at="2021-12-24T06:33:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="8148" started-at="2021-12-24T06:33:06Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Updating the card status to inactive"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Updating the Card status by admin"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="932" started-at="2021-12-24T06:33:14Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Updating the card status to blocked"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Updating the Card status by admin"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1294" started-at="2021-12-24T06:33:15Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Updating the card status from active to active"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Updating the Card status by admin"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1012" started-at="2021-12-24T06:33:16Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate the Card Categories API Response for V1"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Details of Card Categories against an issuer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1014" started-at="2021-12-24T06:33:17Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate the Card Categories API Response for V2"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Details of Card Categories against an issuer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1577" started-at="2021-12-24T06:33:18Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Changing of scheme of issued card and validating the data in the API response"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Card Details fetching API"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="778" started-at="2021-12-24T06:33:19Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Updating the card status to inactive"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Updating the Card status by Customer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="840" started-at="2021-12-24T06:33:20Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Updating the card status to blocked"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Updating the Card status by Customer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1714" started-at="2021-12-24T06:33:21Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Updating the card status from active to active"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Updating the Card status by Customer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="803" started-at="2021-12-24T06:33:23Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the response code and messages."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="907" started-at="2021-12-24T06:33:24Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the response code and messages."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="788" started-at="2021-12-24T06:33:25Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the response code and messages."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="918" started-at="2021-12-24T06:33:25Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the error response code and messages."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1050" started-at="2021-12-24T06:33:26Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the error response code and messages."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="709" started-at="2021-12-24T06:33:27Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the error response code and messages."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="795" started-at="2021-12-24T06:33:28Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Issuing a card with Invalid Scheme id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="610" started-at="2021-12-24T06:33:29Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Issuing a card with Invalid Scheme id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1" started-at="2021-12-24T06:33:29Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Issuing card with amount more that available account balance."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1177)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1022)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:868)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:972)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:293)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:196)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="SKIP" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="runScenario" duration-ms="1" started-at="2021-12-24T06:33:29Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-12-24T06:33:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating the net order amount after changing the issuance charges"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Issuing instant Non Reloadable cards"]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[There are undefined steps]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: There are undefined steps
at io.cucumber.testng.TestCaseResultListener.getError(TestCaseResultListener.java:60)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:73)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:135)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:112)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1177)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1022)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:868)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:972)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:293)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:196)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:pl.rest.testRunners.NonDBTestRunner@53ccbc15]" name="tearDownClass" is-config="true" duration-ms="819" started-at="2021-12-24T06:33:29Z" finished-at="2021-12-24T06:33:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- pl.rest.testRunners.NonDBTestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
